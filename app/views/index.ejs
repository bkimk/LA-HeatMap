<!DOCTYPE html>
<html lang="en">

<head>
  <title>Crime Data</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"> -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
</head>

<body>
  <div class="container mt-4">
    <div class="card mb-3">
      <div class="card-body d-flex flex-column" style="gap: 1rem;">
        <div class="d-flex">
          <div class="me-3">
            <input type="text" id="crimes-input" placeholder="Crime ID" class="form-control">
          </div>
          <button class="btn btn-primary"
            onclick="getAndOutput(`http://${window.location.hostname}/crimes?crime_id`, 'crimes-input')">Get Crimes</button>
        </div>

        <div class="d-flex">
          <div class="me-3">
            <input type="text" id="weapons-input" placeholder="Weapon Description" class="form-control">
          </div>
          <button class="btn btn-primary"
            onclick="getAndOutput(`http://${window.location.hostname}/weapons?weapon_desc`, 'weapons-input')">Get Weapons</button>
        </div>

        <div class="d-flex">
          <div class="me-3">
            <input id="weaponUsedCode" placeholder="Weapon Used Code" class="form-control">
          </div>
          <div class="me-3">
            <input id="weaponDesc" placeholder="Weapon Description" class="form-control">
          </div>
          <button class="btn btn-primary" onclick="createWeapon()">Create Weapon</button>
        </div>

        <div class="d-flex">
          <div class="me-3">
            <input id="weaponUsedCode2" placeholder="Existing Weapon Used Code" class="form-control">
          </div>
          <div class="me-3">
            <input id="weaponDesc2" placeholder="New Weapon Description" class="form-control">
          </div>
          <button class="btn btn-primary" onclick="updateWeapon()">Update Weapon</button>
        </div>
        
        <div class="d-flex">
          <div class="me-3">
            <input id="weaponUsedCode3" placeholder="Existing Weapon Used Code" class="form-control">
          </div>
          <button class="btn btn-primary" onclick="deleteWeapon()">Delete Weapon</button>
        </div>

        <div class="d-flex">
          <button class="btn btn-primary" onclick="getAndOutput(`http://${window.location.hostname}/common-weapons`)">Get Most Crimes
            For Most Common Weapons</button>
        </div>

        <div class="d-flex">
          <div class="me-3">
            <input type="date" id="crime-date" placeholder="Date" class="form-control">
          </div>
          <button class="btn btn-primary"
            onclick="getAndOutput(`http://${window.location.hostname}/crimes-by-date?date_occ`, 'crime-date')">Get Crimes by
            Date</button>
        </div>

      </div>
    </div>
    <div class="card">
      <div class="card-body">
        <h5 class="card-title">Output</h5>
        <div class="card-text table-responsive" id="output"></div>
      </div>
    </div>
  </div>
</body>

<script defer>
  async function createWeapon() {
    const weaponUsedCode = document.getElementById('weaponUsedCode').value;
    const weaponDesc = document.getElementById('weaponDesc').value;
    const res = await fetch(`http://${window.location.hostname}/weapons`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        weaponUsedCode: weaponUsedCode,
        weaponDesc: weaponDesc
      })
    });
    const data = await res.json();
    fillTable(data);
  }

  async function updateWeapon() {
    const weaponUsedCode = document.getElementById('weaponUsedCode2').value;
    const weaponDesc = document.getElementById('weaponDesc2').value;
    const res = await fetch(`http://${window.location.hostname}/weapons`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        weaponUsedCode: weaponUsedCode,
        weaponDesc: weaponDesc
      })
    });
    const data = await res.json();
    fillTable(data);
  }

  async function deleteWeapon() {
    const weaponUsedCode = document.getElementById('weaponUsedCode3').value;
    const res = await fetch(`http://${window.location.hostname}/weapons?weapon_used_code=${weaponUsedCode}`, {
      method: 'DELETE'
    });
    const data = await res.json();
    fillTable(data);
  }

  async function getAndOutput(url, inputId) {
    const input = document.getElementById(inputId);
    if (input) {
      url += `=${input.value}`;
    }
    const res = await fetch(url);
    const data = await res.json();
    fillTable(data);
  }

  function fillTable(data) {
    const outputDiv = document.getElementById('output');
    outputDiv.innerHTML = '';

    if (data.message) {
      const p = document.createElement('p');
      p.innerText = data.message;
      outputDiv.appendChild(p);
      return;
    }

    if (!Array.isArray(data)) {
      const p = document.createElement('p');
      if (typeof data === "object")
        data = JSON.stringify(data);
      p.innerText = data;
      outputDiv.appendChild(p);
      return;
    }

    if (data.length === 0) {
      const p = document.createElement('p');
      p.innerText = 'No results found';
      outputDiv.appendChild(p);
      return;
    }

    const table = document.createElement('table');
    table.classList.add('table');
    table.classList.add('table-striped');
    table.classList.add('table-bordered');
    const thead = document.createElement('thead');
    const tr = document.createElement('tr');
    for (let key in data[0]) {
      const th = document.createElement('th');
      th.scope = 'col';
      th.innerText = key;
      tr.appendChild(th);
    }
    thead.appendChild(tr);
    table.appendChild(thead);

    const tbody = document.createElement('tbody');
    data.forEach((row) => {
      const tr = document.createElement('tr');
      for (let key in row) {
        const td = document.createElement('td');
        td.innerText = row[key];
        tr.appendChild(td);
      }
      tbody.appendChild(tr);
    });
    table.appendChild(tbody);

    outputDiv.appendChild(table);
  }
</script>

</html>